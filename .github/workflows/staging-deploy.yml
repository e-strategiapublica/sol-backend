name: Staging CI/CD

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Testes
        run: npm test

      - name: Build
        run: npm run build

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy para Staging
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          DEPLOY_PATH: "/root/sol/sol-backend"
        run: |
          # Adiciona servidor aos known_hosts
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          # Transfere arquivos
          rsync -avz --delete \
            ./dist/ \
            ./package*.json \
            ./ecosystem.config.js \
            $SSH_USER@$SSH_HOST:$DEPLOY_PATH

          # Executa comandos remotos
          ssh $SSH_USER@$SSH_HOST "cd $DEPLOY_PATH && \
            npm ci --production && \
            pm2 reload ecosystem.config.js"

      - name: Notificar deploy
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "üöÄ Deploy para staging conclu√≠do com sucesso!"
          else
            echo "‚ùå Deploy para staging falhou"
            exit 1
          fi
